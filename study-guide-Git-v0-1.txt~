Git 

Study Guide 

1 Versa what?! 

What is version control?
It's a system that let's you record changes to a file or several files.

 
2 Where the heart is 

What is the difference between distributed and centralized version control systems? 
Git is a distributed version control system and it allows the user to have more control locally. Centralized version control systems act more like an AS/400 where the power is at the server and not the client/terminal.


3 Versa who?! 

What does a version control program do for us? 
It frees us up to do bug fixes or updates. It allows a group of people to collaborate on a single project all the while tracking revisions of each team member.


4 Committing to git 

What is a commit? 
a.k.a. checkin, it actually records teh update you just made into a new revision.


5 Checking out git 

What is a check out? 
It updates files in the working tree so they'll match the revision being worked on.


6 It’s like a tree limb 

What is a branch? 
If you make some changes and commit again, the next commit stores a pointer to the commit that came immediately before it.
A branch in Git is simply a lightweight moveable pointer to one of these commits.
 
7 The life of a limb 

How long are branches in git supposed to exist? 
Branches exist until deleted. Even after deletion, their history can remain.


8 Tree growth 

How do you create a branch in git? 
Use the command git branch nameofbranch


9 Swinging on a vine 

How do you switch branches in git? 
Run the git checkout commnad. Ex; git checkout nameofbranch

10 Taping it together 

How do you merge branches in git? 
checkout the master branch by doing git checkout master, then merge the edit you did by using git merge fixbug.

11 Status 

How do you check the status of the ﬁles you are presently working on? 
git status


12 Adding to the chaos 

How do you add files to the repository? 
git add .

13 The main line 

What is the name for the primary branch in git? 
master

14 What limb are you on? 

How do you check which branch you presently have checked out? 
 git show-branch

15 Git what?! 

What is github? 


16 We see a need! 

Why was git created? 


17 A day in the life of git 

What is a typical git workﬂow? 


18 Why git? 

What makes git di••erent than other version control systems? 


19 What were they thinking?! 

What were the design criteria for git? 


20 Time machine 

How do we view the past of a project with git? 


21 Commit Comment 

How much information, and what kind of information should be in a commit message? 


22 Great Scott! 

If there was a mistake made in the past of a project, how should we go about correcting that mistake? 
 
